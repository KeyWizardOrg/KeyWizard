variables:
  SOLUTION_NAME: "MicrosoftKeyWizard"
  BUILD_CONFIG: "Release"

default:
  tags:
    - local

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - "**/obj/project.assets.json"
    - "**/obj/*.csproj.nuget.*"

stages:
  - build
  - test
  - quality

.setup-dotnet:
  before_script:
    - Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile "dotnet-install.ps1"
    - .\dotnet-install.ps1 -Version 8.0.100 -InstallDir "$HOME\.dotnet"
    - $env:PATH = "$HOME\.dotnet;" + $env:PATH
    - $env:DOTNET_ROOT = "$HOME\.dotnet"
    - $env:DOTNET_SYSTEM_GLOBALIZATION_INVARIANT = "1"

build:
  stage: build
  extends: .setup-dotnet
  script:
    - dotnet restore
    - dotnet build --configuration $BUILD_CONFIG
    - dotnet pack --configuration $BUILD_CONFIG --output packages/
  artifacts:
    paths:
      - "**/bin"
      - "**/obj"
      - "packages/*.nupkg"
    expire_in: 1 week

test:
  stage: test
  extends: .setup-dotnet
  script:
    - dotnet tool install --global coverlet.console
    - dotnet test --configuration $BUILD_CONFIG --collect:"XPlat Code Coverage"
  coverage: '/Line coverage: \d+\.\d+%/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: "**/coverage.cobertura.xml"

quality:
  stage: quality
  extends: .setup-dotnet
  script:
    - dotnet format --verify-no-changes
    - dotnet list package --vulnerable
    - dotnet list package --outdated
    - |
      echo "## Quality Report" >> quality-report.md
      echo "Last checked: $(date)" >> quality-report.md
      echo "### Vulnerable Packages" >> quality-report.md
      dotnet list package --vulnerable >> quality-report.md
      echo "### Outdated Packages" >> quality-report.md
      dotnet list package --outdated >> quality-report.md
    - dotnet --info
  artifacts:
    paths:
      - quality-report.md
  allow_failure: true